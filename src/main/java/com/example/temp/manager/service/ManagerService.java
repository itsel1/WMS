package com.example.temp.manager.service;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.example.temp.api.aci.vo.ApiOrderItemListVO;
import com.example.temp.api.aci.vo.ApiOrderListVO;
import com.example.temp.api.aci.vo.BizInfo;
import com.example.temp.common.vo.InvUserInfoVO;
import com.example.temp.common.vo.NoticeVO;
import com.example.temp.common.vo.ZoneVO;
import com.example.temp.manager.vo.DlvChgInfoVO;
import com.example.temp.manager.vo.DlvPriceVO;
import com.example.temp.manager.vo.ExpLicenceExcelVO;
import com.example.temp.manager.vo.ExpLicenceListVO;
import com.example.temp.manager.vo.FastboxInfoVO;
import com.example.temp.manager.vo.HawbChkVO;
import com.example.temp.manager.vo.HawbListVO;
import com.example.temp.manager.vo.HawbVO;
import com.example.temp.manager.vo.ManagerVO;
import com.example.temp.manager.vo.MawbVO;
import com.example.temp.manager.vo.NationVO;
import com.example.temp.manager.vo.OrderInspListOneVO;
import com.example.temp.manager.vo.OrderInspListVO;
import com.example.temp.manager.vo.OrderInspVO;
import com.example.temp.manager.vo.OrderItemExpOptionVO;
import com.example.temp.manager.vo.OrderItemOptionVO;
import com.example.temp.manager.vo.OrderListExpOptionVO;
import com.example.temp.manager.vo.OrderListOptionVO;
import com.example.temp.manager.vo.OrderListVO;
import com.example.temp.manager.vo.OrderRcptVO;
import com.example.temp.manager.vo.OrderWeightVO;
import com.example.temp.manager.vo.PriceVO;
import com.example.temp.manager.vo.ProcedureVO;
import com.example.temp.manager.vo.SendVO;
import com.example.temp.manager.vo.StationDefaultVO;
import com.example.temp.manager.vo.StockAllVO;
import com.example.temp.manager.vo.StockMsgVO;
import com.example.temp.manager.vo.StockOutVO;
import com.example.temp.manager.vo.StockResultVO;
import com.example.temp.manager.vo.StockVO;
import com.example.temp.manager.vo.TransComVO;
import com.example.temp.manager.vo.VolumeVO;
import com.example.temp.manager.vo.WhNoticeFileVO;
import com.example.temp.manager.vo.WhNoticeVO;
import com.example.temp.manager.vo.insp.InnerProductVO;
import com.example.temp.manager.vo.insp.InspStockListVO;
import com.example.temp.manager.vo.insp.InspStockOutVO;
import com.example.temp.member.vo.ShpngListVO;
import com.example.temp.member.vo.UserOrderItemListVO;
import com.example.temp.member.vo.UserOrderItemVO;
import com.example.temp.member.vo.UserOrderListVO;
import com.example.temp.smtp.ViewYslItemCode;


@Service
public interface ManagerService {
	
	public ArrayList<ManagerVO> testSelect() throws Exception;
	public ArrayList<ManagerVO> selectInfo(String userId) throws Exception;
	public int selectTotalCountInfo(HashMap<String, Object> infoMap) throws Exception;
	public ArrayList<ManagerVO> selectUserList(HashMap<String, Object> testMap) throws Exception;
	public void insertMemberInfos(ManagerVO userInfo, HttpServletRequest request, InvUserInfoVO invUserInfo) throws Exception;
	public ManagerVO selectUserInfo(String userId) throws Exception;
	public void updateUserInfo(ManagerVO userInfoVO, InvUserInfoVO invUserInfo, HttpServletRequest request) throws Exception;
	public int selectOrderInspcCnt(HashMap<String, Object> orderInfo) throws Exception;
	public ArrayList<OrderInspListOneVO> selectOrderInspc(HashMap<String, Object> orderInfo) throws Exception;
	public ArrayList<OrderInspListVO> selectOrderInspcList(HashMap<String, Object> orderInfo) throws Exception;
	public ArrayList<MawbVO> selectMawbList(String OrgStation) throws Exception;
	public void insertMawb(MawbVO mawbVO) throws Exception;
	public int existMawb(String mawbNo) throws Exception;
	public void updateMawb(MawbVO mawbVO) throws Exception;
	public ArrayList<StockResultVO> selectTestSS() throws Exception;
	public ArrayList<MawbVO> selectMawbList2(MawbVO mawbVOne) throws Exception;
	public ArrayList<HawbVO> selectHawbList(String mawbNo) throws Exception;
	public void deleteMawbOne(String mawbNo) throws Exception;
	public String insertHawb(HawbVO hawbVo) throws Exception;
	public String hawbCount(String mawbNo) throws Exception;
	public void updateHawbMawb(MawbVO mawbVO) throws Exception;
	public ArrayList<String> selectUserTrkNation(String userId) throws Exception;
	public ArrayList<OrderInspVO> selectOrderInspcItem(String targetNNO) throws Exception;
	public HawbVO selectHawbInfo(HawbVO hawbVo) throws Exception;
	public void deleteUserInfo(String targetParm) throws Exception;
	public void resetUserPw(ManagerVO userInfoVO) throws Exception;
	public ArrayList<TransComVO> selectTransCom() throws Exception;
	public void deleteTransCom(String parameter) throws Exception;
	public void updateTransCom(TransComVO transComVO) throws Exception;
	public void transComInsert(TransComVO transComVO) throws Exception;
	public void insertTransZone(ZoneVO zoneVO) throws Exception;
	public void selectTest(ZoneVO zoneVO) throws Exception;
	public void insertPrice(PriceVO priceVO) throws Exception;
	public int selectTotalCountNation(HashMap<String, Object> infoMap) throws Exception;
	public ArrayList<ZoneVO> selectRgstNationList(HashMap<String, Object> infoMap) throws Exception;
	public void updateTransZone(ZoneVO zoneVO) throws Exception;
	public int selectTotalCountZone(HashMap<String, Object> infoMap) throws Exception;
	public ArrayList<PriceVO> selectRgstZoneList(HashMap<String, Object> infoMap) throws Exception;
	public PriceVO selectZoneOne(PriceVO priceVO) throws Exception;
	public void updatePrice(PriceVO priceVO) throws Exception;
	public ArrayList<String> selectUserOrgNation(String userId) throws Exception;
	public ArrayList<String> selectUserDstnNation(String userId) throws Exception;
	public void insertNotice(NoticeVO noticeInfoVO) throws Exception;
	public HashMap<String, ArrayList<ShpngListVO>> selectShpngList(HashMap<String, Object> parameter, String orderType) throws Exception;
	public void deleteOrderList(String[] nnoList, String[] targetUserList, String userId, String remoteAddr) throws Exception;
	public HashMap<String, ArrayList<ShpngListVO>> selectRecoveryList(HashMap<String, Object> params) throws Exception;
	public void recoveryOrderList(String[] dnoList, String userId, String remoteAddr) throws Exception;
	public void insertStockFile(StockAllVO stockAll) throws Exception;
	public void insertStockMsg(StockAllVO stockAll) throws Exception;
	public StockResultVO insertStock(StockAllVO stockAll) throws Exception;
	public ArrayList<StockVO> selectStockByGrpIdx(String groupIdx) throws Exception;
	public void insertStockVolumn(StockAllVO stockAll) throws Exception;
	public ArrayList<UserOrderItemVO> selectUserRegistOrderItemOne(UserOrderListVO userOrder) throws Exception;
	public ArrayList<InspStockListVO> selectInspStockList(HashMap<String, Object> parameterInfo) throws Exception;
	public String selectAdminStation(String username) throws Exception;
	public ArrayList<InspStockListVO> selectInspStockOrderInfo(HashMap<String,Object> parameters) throws Exception;
	public ArrayList<StockResultVO> orderInspcWhProcess(HttpServletRequest request, MultipartHttpServletRequest multi, MultipartFile file) throws Exception;
	public ArrayList<StockResultVO> selectStockResultVO(HttpServletRequest request, String groupIdx) throws Exception;
	public void execStockDel(HashMap<String, String> cancleInspInfo) throws Exception;
	public StationDefaultVO selectStationDefaultCond(String userId) throws Exception;
	public HawbChkVO execNomalHawbChk(HawbVO hawbVo) throws Exception;
	public String execNomalHawbIn(OrderRcptVO orderRcpt, VolumeVO volume, Map<String, String[]> parameterMaps, HttpServletRequest request) throws Exception;
	public ProcedureVO execNomalHawbVolume(VolumeVO volume) throws Exception;
	public ArrayList<StockMsgVO> selectMsgHist(HashMap<String, String> parameters) throws Exception;
	public void insertMsgInfo(StockMsgVO msgInfo) throws Exception;
	public ArrayList<HawbListVO> selectRegistHawbList(String wUserId, String transCode) throws Exception;
	public String insertHawbMawb(String mawbNo, String[] hawbList, HttpServletRequest request) throws Exception;
	public String execMawbCancle(String[] hawbList, String wUserId, String wUserIp) throws Exception;
	public ArrayList<OrderListVO> selectOrderRcptList(OrderListVO parameters) throws Exception;
	public ProcedureVO execOrderRcptList(String[] targetNno, HttpServletRequest request) throws Exception;
	public String selectManifastMawb(String parameter, HttpServletResponse response, HttpServletRequest request) throws Exception;
	public ArrayList<SendVO> selectSendList(SendVO parameters) throws Exception;
	public ArrayList<SendVO> selectUnSendList(SendVO parameters) throws Exception;
	public void updateUserOrderList(UserOrderListVO userOrderList, UserOrderItemListVO userOrderItemList) throws Exception;
	public String insertOrderWeightExcel(MultipartHttpServletRequest multi, HttpServletRequest request, HashMap<String, String> parameters) throws Exception;
	public ArrayList<OrderWeightVO> selectOrderWeightExcel(String orgStation) throws Exception;
	public String execOrderWeightList(String[] parameterValues, HttpServletRequest request) throws Exception;
	public String delOrderWeightList(String[] parameterValues, HttpServletRequest request) throws Exception;
	public ArrayList<NationVO> selectUserDstnNationInfo(String attribute) throws Exception;
	public StockVO selectStockByNo(String stockNo, String nno, String alreadyInfo) throws Exception;
	public String selectChkCntStock(String nno) throws Exception;
	public int selectTotalCountStock(HashMap<String, Object> parameterInfo) throws Exception;
	public ProcedureVO execSpWhoutStock(HashMap<String, Object> parameter) throws Exception;
	public ArrayList<InspStockOutVO> selectStockOutTarget(HashMap<String, Object> parameter) throws Exception;
	public String selectTargetSubNo(String stockNo) throws Exception;
	public void deleteStockOut(HashMap<String, Object> parameter) throws Exception;
	public ProcedureVO execStockHawbIn(Map<String, String[]> parameterMaps, HttpServletRequest request, HttpServletResponse response) throws Exception;
	public String selectUserTransComByNno(String nno) throws Exception;
	public String excuteAramexHawb(HttpServletRequest request, String nno) throws Exception;
	public String excuteAramexHawbMemberOut(String nno, String userId, String userIp) throws Exception;
	public ProcedureVO managerPrintInspcHawb(HttpServletRequest request, String nno) throws Exception;
	public String selectHawbNnoCheck(String nno) throws Exception;
	public void deleteInspcStockOutCzFail(String nno) throws Exception;
	public StockVO selectStockByNo2(String stockNo) throws Exception;
	public ProcedureVO execAddBlApply(String nno, String userId, String userIp) throws Exception;
	public String selectStockMaxNo() throws Exception;
	public ArrayList<StockVO> unRegistWhProcess(HttpServletRequest request, MultipartHttpServletRequest multi, MultipartFile file) throws Exception;
	public ArrayList<String> selectTransCodeForAdmin(String string) throws Exception;
	public ArrayList<InnerProductVO> selectInnerProductList(HashMap<String,String> parameters) throws Exception;
	public void updateInnerProductList(HashMap<String, String> parameters) throws Exception;
	public HawbVO selectFtpCount(String attribute)  throws Exception;
	public ArrayList<InnerProductVO> selectInnerProductListAll(HashMap<String, String> parameters) throws Exception;
	public int selectShpngListCount(HashMap<String, Object> parameter) throws Exception;
	public void updateItemTrkNo(String trkNo, String nno, String subNo) throws Exception;
	public ArrayList<InspStockOutVO> selectStockRackInfo(HashMap<String, Object> parameter) throws Exception;
	public int selectSendListCount(SendVO search) throws Exception;
	public int selectUnSendListCount(SendVO search) throws Exception;
	public String selectTransCodeInStock(String nno) throws Exception;
	public OrderListOptionVO SelectOrderListOption(String targetCode, String dstnNation) throws Exception;
	public OrderItemOptionVO SelectOrderItemOption(String targetCode, String dstnNation) throws Exception;
	public OrderListExpOptionVO SelectExpressListOption(String targetCode, String dstnNation) throws Exception;
	public OrderItemExpOptionVO SelectExpressItemOption(String targetCode, String dstnNation) throws Exception;
	public void insertOrderListOption(OrderListOptionVO optionOrderVO,String targetCode) throws Exception;
	public void insertOrderItemOption(OrderItemOptionVO optionItemVO,String targetCode) throws Exception;
	public void insertOrderListExpOption(OrderListExpOptionVO expressOrderVO,String targetCode) throws Exception;
	public void insertOrderItemExpOption(OrderItemExpOptionVO expressItemVO,String targetCode) throws Exception;
	public ArrayList<String> selectOrderListOptionNation(String targetCode) throws Exception;
	public String makeExpLicenceExcel(HttpServletRequest request, HttpServletResponse response, ArrayList<String> orderNnoList) throws Exception;
	public void insertExpLicence(MultipartHttpServletRequest multi, HttpServletRequest request, String excelRoot) throws Exception;
	public ArrayList<ExpLicenceListVO> selectLicenceList(ExpLicenceListVO parameters) throws Exception;
	public ArrayList<HawbVO> selectExpFieldList(String mawbNo) throws Exception;
	public HawbVO selectExpLicenceCount(String attribute) throws Exception;
	public String makeMawbExcel(HttpServletRequest request, HttpServletResponse response) throws Exception;
	public String makeEfsExcel(HttpServletRequest request, HttpServletResponse response,
			ArrayList<String> orderNnoList) throws Exception;
	
	public String makeDownExpLicenceInfo(HttpServletRequest request, HttpServletResponse response,
			ArrayList<String> orderNnoList) throws Exception;
	
	public String makeExplicence(HawbVO hawbVo, ArrayList<ExpLicenceExcelVO>  expLicence) throws Exception;
	public int expLicenceChk(HawbVO hawbVo) throws Exception;
	public ArrayList<String> selectNotSendEfsInfo() throws Exception;
	public ArrayList<ExpLicenceExcelVO> selectExcelLicenceEFS(String string) throws Exception;
	public StockVO selectStockByStockNo(String stockNo) throws Exception;
	public StockResultVO selectStockResultStockVO(HttpServletRequest request, String stockNo) throws Exception;
	public ApiOrderListVO selectOrderListAramex(String nno) throws Exception;
	public ArrayList<ApiOrderItemListVO> selectOrderItemAramex(String nno) throws Exception;
	public HashMap<String, ArrayList<String>> selectZoneMap(String userId, String orgStation) throws Exception;
	public void insertZoneExcelUpload(MultipartHttpServletRequest multi, HttpServletRequest request, String excelRoot) throws Exception;
	public ArrayList<DlvPriceVO> selectInvoiceName() throws Exception;
	public ArrayList<NationVO> selectStationInfo() throws Exception;
	public ArrayList<String> selectMenualDstnList(String userId, String orgStation) throws Exception;
	public void insertCustomerChgInfo(HashMap<String, Object> parameters) throws Exception;
	public void updateCustomerChgInfo(HashMap<String, Object> parameters) throws Exception;
	public void deleteCustomerChgInfo(HashMap<String, Object> parameters) throws Exception;
	public ArrayList<DlvChgInfoVO> selectDlvChgInfo(String userId, String orgStation) throws Exception;
	public void zoneExcelUploadIndividual(MultipartHttpServletRequest multi, HttpServletRequest request,
			String excelRoot, String userId) throws Exception;
	public void resetCustomerChgInfo(HashMap<String, Object> parameters) throws Exception;
	public void insertCustoerInvoice(HashMap<String, Object> parameters) throws Exception;
	public void updateCustomerEtcFee(HashMap<String, Object> parameters) throws Exception;
	public ArrayList<ApiOrderItemListVO> selectOrderItemAramexMember(String nno) throws Exception;
	public ArrayList<HashMap<String, Object>> selectHawbTrans(String orgStation) throws Exception;
	public String selectSekoHawb(String hawbNo) throws Exception;
	public ArrayList<HawbVO> selectHawbListArr(String mawbNo) throws Exception;
	public ArrayList<MawbVO> selectMawbList3(MawbVO parameters) throws Exception;
	public void insertMawbArr(HawbVO hawbVo) throws Exception;
	public HashMap<String, Object> selectMawbArrInfo(String parameter) throws Exception;
	public void updateMawbArr(HashMap<String, Object> mawbArrInfo) throws Exception;
	public String selectUdate(HashMap<String, Object> mawbArrInfo) throws Exception;
	public String selectNNOByHawbNo(String hawbNo) throws Exception;
	public HashMap<String, Object> checkMawbArr(String hawbNo)  throws Exception;
	public ArrayList<String> selectDistinctBlList()  throws Exception;
	public ArrayList<String> selectExpLicenceYsl() throws Exception;
	public String selectExpLicenceYslChk(String nno) throws Exception;
	
	// 출고 목록 추가 ---------------
	public ArrayList<StockOutVO> selectStockOutList(HashMap<String, Object> parameterInfo);
	public int selectStockOutListCnt(HashMap<String, Object> parameterInfo);
	public ArrayList<StockOutVO> stockOutListByMonth(HashMap<String, Object> parameterInfo);
	public ArrayList<StockOutVO> selectStockOutByUserId(HashMap<String, Object> parameterInfo);
	public ArrayList<HashMap<String, Object>> selectStationCodeList(HashMap<String, Object> parameterInfo);
	public ArrayList<StockOutVO> selectStockOutListChart(HashMap<String, Object> parameterInfo);
	public ArrayList<StockOutVO> selectStockOutListChart(StockOutVO vo);
	public void selectStockOutListExcel(StockOutVO stockOutVO, HttpServletResponse response, HttpServletRequest request, HashMap<String, Object> parameterInfo);
	public void stockOutListByMonthExcel(StockOutVO stockOutVO, HttpServletResponse response, HttpServletRequest request, HashMap<String, Object> parameterInfo);
	public void stockOutListByUserIdExcel(StockOutVO stockOutVO, HttpServletResponse response, HttpServletRequest request, HashMap<String, Object> parameterInfo);
	public void stockOutExcelDown(StockOutVO stockOutVO, HttpServletRequest request, HttpServletResponse response, HashMap<String, Object> parameterInfo);
	public String selectStationCode(String stationName);
	public ArrayList<StockOutVO> selectClickedChart(HashMap<String, Object> parameterInfo);
	public void selectInvoiceExcelDown(HttpServletRequest request, HttpServletResponse response, HashMap<String, Object> parameterInfo);
	public ArrayList<StockOutVO> selectUserStockOutList(HashMap<String, Object> params);
	public ArrayList<HashMap<String, Object>> selectTransCodeFilter(HashMap<String, Object> params);
	public int selectTransCodeTotalCnt(HashMap<String, Object> params);
	public int selectInBoundCnt(HashMap<String, Object> parameterInfo);
	public int selectOutBoundCnt(HashMap<String, Object> parameterInfo);
	public ArrayList<StockOutVO> selectStockOutMonthlyList(HashMap<String, Object> params2);
	public ArrayList<HashMap<String, Object>> selectDailyChart(HashMap<String, Object> params);
	public String selectNNOByStockNo(HashMap<String, Object> parameter);
	public void selectSendListExcelDown(SendVO sendVO, HashMap<String, Object> params, HttpServletRequest request, HttpServletResponse response);
	public ArrayList<NoticeVO> selectNotice(HashMap<String, Object> infoMap);
	public int selectDepositPrice(String userId);
	public void insertDepositPrice(ManagerVO userInfoVO);
	public ArrayList<HashMap<String, Object>> selectMawbManifestList(HashMap<String, Object> infoMap);
	public int selectMawbManifestListCnt(HashMap<String, Object> infoMap);
	public void orderInfoExcelDown(String mawbNo, HttpServletRequest request, HttpServletResponse response) throws Exception ;
	public String updateOrderExcel(MultipartHttpServletRequest multi, HttpServletRequest request,
			HttpServletResponse response);
	public void selectMawbExcelDown(String mawbNo, HttpServletRequest request, HttpServletResponse response) throws Exception ;
	public ArrayList<UserOrderListVO> selectOrderListT86(HashMap<String, Object> params) throws Exception ;
	public ArrayList<HawbListVO> selectType86HawbList(HashMap<String, Object> params) throws Exception;
	public ArrayList<HashMap<String, String>> selectBagNoList(String mawbNo) throws Exception;
	public ArrayList<HashMap<String, Object>> selectHawbListByBagNo(HashMap<String, Object> params) throws Exception;
	public String[] selectNnoListByMawbNo(String mawbNo) throws Exception;
	public ArrayList<UserOrderListVO> selectOrderInfo(HashMap<String, Object> parameters) throws Exception;
	public ArrayList<HashMap<String, Object>> selectChangeOrderList(String mawbNo) throws Exception;
	public ArrayList<UserOrderListVO> selectChangeOrderInfo(String nno) throws Exception;
	public ArrayList<LinkedHashMap<String, Object>> selectChangeItemInfo(String nno) throws Exception;
	public UserOrderListVO selectFirstOrderInfo(String nno) throws Exception;
	public ArrayList<LinkedHashMap<String, Object>> selectFirstOrderItemInfo(HashMap<String, Object> params) throws Exception;
	public ArrayList<String> selectExpLicenceFB() throws Exception;
	public int selectUserMallCnt(FastboxInfoVO fastboxInfo) throws Exception;
	public void updateUserMallInfo(FastboxInfoVO fastboxInfo) throws Exception;
	public void insertUserMallInfo(FastboxInfoVO fastboxInfo) throws Exception;
	public FastboxInfoVO selectUserMallInfo(String userId) throws Exception;
	public ArrayList<HashMap<String, Object>> selectOrderListForErr(HashMap<String, Object> params) throws Exception;
	public ArrayList<String> selectErrorMsgByNNO(String nno) throws Exception;
	public void cusItemCodeExcelDown(HttpServletRequest request, HttpServletResponse response,
			ArrayList<ViewYslItemCode> viewList) throws Exception;
	public void updateMawbHawb(HashMap<String, Object> params) throws Exception;
	public int selectRecoveryListCnt(HashMap<String, Object> params) throws Exception;
	//--------------------
	public void insertWhoutNoticeIn(HttpServletRequest request, MultipartHttpServletRequest multi) throws Exception;
	public void insertWhoutOrderIn(HttpServletRequest request, MultipartHttpServletRequest multi) throws Exception;
	public HashMap<String, Object> selectWhoutOrder(HashMap<String, Object> paramters) throws Exception;
	public ArrayList<HashMap<String, Object>> selectWhoutFiles(HashMap<String, Object> parameters) throws Exception;
	public void deleteWhoutFile(HashMap<String, Object> parameters) throws Exception;
	public int selectNoticeListCnt(HashMap<String, Object> params) throws Exception;
	public HashMap<String, Object> selectNoticeInfo(int idx) throws Exception;
	public void insertWhNoticeReply(HashMap<String, Object> parameters) throws Exception;
	//---------------------
	public int selectWhNoticeListCnt(HashMap<String, Object> params) throws Exception;
	public ArrayList<WhNoticeVO> selectWhNoticeList(HashMap<String, Object> params) throws Exception;
	public void insertWhNoticeInfo(HttpServletRequest request, MultipartHttpServletRequest multi) throws Exception;
	public WhNoticeVO selectWhNoticeDetail(HashMap<String, Object> params) throws Exception;
	public int selectWhNoticeFileYn(HashMap<String, Object> params) throws Exception;
	public ArrayList<HashMap<String, Object>> selectWhNoticeFileList(HashMap<String, Object> params) throws Exception;
	public void noticeFileDel(HashMap<String, Object> params) throws Exception;
	public void updateWhNoticeInfo(HttpServletRequest request, MultipartHttpServletRequest multi) throws Exception;
	public void insertWhNoticeReplyIn(HttpServletRequest request, MultipartHttpServletRequest multi) throws Exception;
	public HashMap<String, Object> execNoticeDel(HashMap<String, Object> params) throws Exception;
	public ArrayList<HashMap<String, Object>> selectWhNoticeFiles(int idx) throws Exception;
	public String fastboxSendDelivery(String[] hawbList, String mawbNo) throws Exception;
	public void printCommercialPdf(HttpServletRequest request, HttpServletResponse response,
			ArrayList<String> orderNnoList, String printType) throws Exception;
	public void printCommercialExcel(HttpServletRequest request, HttpServletResponse response,
			ArrayList<String> orderNnoList, String printType) throws Exception;
	public void printPackingListExcel(HttpServletRequest request, HttpServletResponse response,
			ArrayList<String> orderNnoList, String printType) throws Exception;
	public ArrayList<UserOrderListVO> selectOrderListLabelChange(HashMap<String, Object> parameterInfo) throws Exception;
	public int selectOrderListLabelChangeCnt(HashMap<String, Object> parameterInfo) throws Exception;
	public ArrayList<HawbListVO> selectChangeLabelList(HashMap<String, Object> parameterInfo) throws Exception;
	public void monthReportExcelDown(HttpServletRequest request, HttpServletResponse response) throws Exception;
	public HashMap<String, Object> selectWeightInfo(String nno) throws Exception;
	public int selectDeleteOrderListCnt(HashMap<String, Object> params) throws Exception;
	public ArrayList<ShpngListVO> selectDeleteOrderList(HashMap<String, Object> params) throws Exception;
	public void downloadYunExpExcel(HttpServletRequest request, HttpServletResponse response) throws Exception;
	public ArrayList<ShpngListVO> selectYunExpOrderList(HashMap<String, Object> parameters) throws Exception;
	public void yunExpOrderListExcelDown(HttpServletRequest request, HttpServletResponse response) throws Exception;
	public UserOrderListVO selectYunExpOrderInfo(HashMap<String, Object> parameters) throws Exception;
	public void insertYunExpDeliveryInfo(HashMap<String, Object> parameters) throws Exception;
	public HashMap<String, Object> selectUserIdByNno(String nno) throws Exception;
	public String selectOrgStationByUserId(String userId) throws Exception;
	public HashMap<String, Object> selectCheckMawbNo(String mawbNo) throws Exception;
	public void updateMawbNo(HawbVO hawbVo) throws Exception;
	public void updateBagNo(HashMap<String, Object> params) throws Exception;
	public ArrayList<ManagerVO> selectSendEmailreturnSeller() throws Exception;
	public void insertHisSendEmail(ArrayList<ManagerVO> userInfo) throws Exception;
	public ArrayList<BizInfo> selectBizInfoList(HashMap<String, Object> parameters) throws Exception;
	public int selectBizInfoListCnt(HashMap<String, Object> parameters) throws Exception;
	public ArrayList<HashMap<String, Object>> selectUserInfoList(HashMap<String, Object> parameters) throws Exception;
	public void insertBizInfo(BizInfo bizInfo) throws Exception;
	public void updateBizInfo(BizInfo bizInfo) throws Exception;
	public BizInfo selectBizInfoOne(HashMap<String, Object> parameters) throws Exception;
	public ArrayList<String> selectExpNoYsl() throws Exception;
	public ArrayList<String> selectExpNoFB() throws Exception;
	public byte[] selectDownloadManifest(HttpServletRequest request, HttpServletResponse response) throws Exception;
	public ArrayList<HashMap<String, Object>> selectFastboxData() throws Exception;
	public ArrayList<HashMap<String, Object>> selectTransCodeList(HashMap<String, Object> parameterInfo) throws Exception;
	public int selectMawbApplyListCnt(HashMap<String, Object> parameterInfo) throws Exception;
	public ArrayList<SendVO> selectMawbApplyList(HashMap<String, Object> parameterInfo) throws Exception;
	public ArrayList<HashMap<String, Object>> selectTaxTypeList() throws Exception;

	
}