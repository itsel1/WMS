<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<include
	resource="org/springframework/boot/logging/logback/base.xml" /> <!-- (s) 기본 로그 레벨 값 설정 -->

	<logger name="java.sql" level="OFF" />
	<logger name="org.springframework" level="OFF" />
	<logger name="jdbc" level="OFF" /> 
	<logger name="jdbc.connection" level="OFF" /> 
	<logger name="jdbc.sqlonly" level="OFF" /> 
	<logger name="jdbc.sqltiming" level="DEBUG" />	<!-- DEBUG --> 
	<logger name="jdbc.audit" level="OFF" /> 
	<logger name="jdbc.resultset" level="OFF" /> 
	<logger name="jdbc.resultsettable" level="OFF" />	<!-- DEBUG -->
	<logger name="com.example.temp" level="DEBUG" />	<!-- DEBUG -->
	
	<root level="OFF">
		<appender-ref ref="CONSOLE" />
	</root>
	

	<!-- <appender name="STDOUT"	class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%d{yyyyMMdd HH:mm:ss.SSS} [%thread] %-3level - %msg %n</pattern>
		</encoder>
	</appender>
	
	<logger name="jdbc" level="OFF" /> 
	
	커넥션 open close 이벤트를 로그로 남긴다.
	<logger name="jdbc.connection" level="OFF" /> 
	
	SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다.
	<logger name="jdbc.sqlonly" level="OFF" /> 
	
	SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다.
	<logger name="jdbc.sqltiming" level="INFO" /> 
	
	ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 
		추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다.
	<logger name="jdbc.audit" level="OFF" /> 
	
	ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다.
	<logger name="jdbc.resultset" level="OFF" /> 
	
	SQL 결과 조회된 데이터의 table을 로그로 남긴다.
	<logger name="jdbc.resultsettable" level="INFO" />
	
	<root level="INFO">
		<appender-ref ref="STDOUT" />
	</root> -->
</configuration>